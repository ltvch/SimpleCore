@model Employee
@{
    ViewData["Title"] = "Сотрудники";
}
<!--Container with button-->
<div class="container">
    <div class="row justify-content-between my-sm-2">
        <button type="button" class="btn btn-primary btn-primary btn-lg" data-toggle="modal" data-target="#seatModal">Добавить должность</button>
        <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal">Добавить сотрудника</button>
    </div>
    <!-- Modal Seat-->
    <div class="modal fade" id="seatModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        @await Html.PartialAsync("SeatPupUp")
    </div>
    <!-- Modal Employee-->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            @await Html.PartialAsync("EmployeePupUp")
    </div>
</div>

<!--Табличные данные-->
<table id="empTable" class="table table-hover">
    <thead>
        <tr>
            <th>#</th>
            <th>Должность</th>
            <th>Сотрудник</th>
            <th>Оклад</th>
            <th>Дата назначения</th>
            <th>Дата увольнения</th>
        </tr>
    </thead>
    @foreach (var employee in (IEnumerable<Employee>)ViewBag.Items)
    {
        <tr>
            <td>@employee.Id</td>
            <td>@employee.Position</td>
            <td>@employee.LastName @employee.Name</td>
            <td>@employee.Salary$</td>
            <td>@Html.DisplayFor(x => @employee.Hired)</td>
            <td>@Html.DisplayFor(x => @employee.Fired)</td>
        </tr>
    }
</table>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
